apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: global-manifest-catalog
  title: Catalogar Serviço Global Manifest
  description: Adicione uma aplicação (Global-Manifest) ao Catalogo Backstage Carrefour
spec:
  owner: platform
  type: service
  parameters:
    - title: Informações Bitbucket
      required:
        - repoName
      properties:
        repoName:
          type: string
          description: Nome do repositorio Global Manifest br-apps-${appName}-global-manifest"
          maxLength: 63
          pattern: '^br-apps-.+-(global-manifest)$'
          ui:autofocus: true
          ui:help: 'Hint: siga o padrão.'
        
  steps:
    - id: bitbucket-ssh-key
      name: Configurar SSH Bitbucket
      action: carrefour:shell:execute
      input:
        command: >
          mkdir -p ~/.ssh &&
          echo "Host bitbucket.org
            IdentityFile /tmp/bitbucket.key
            IdentitiesOnly yes
            StrictHostKeyChecking no" > ~/.ssh/config

    - id: bitbucket-user
      name: Configurar Bitbucket User
      action: carrefour:shell:execute
      input:
        command: >
          git config --global user.email "br_plataformacloud@carrefour.com" &&
          git config --global user.name "Backstage"

    - id: clone-repo
      name: Clone Repository
      action: git:clone
      input:
        repoUrl: git@bitbucket.org:carrefour_ecommerce/${{ parameters.repoName }}.git
        args: ['--depth','1']


    - id: show-files
      name: List Dir Files
      action: carrefour:shell:execute
      input:
        command: >
          ls -lart . ${{ parameters.repoName }}

    - id: read-project-info
      name: Ler Informações do Projeto
      action: carrefour:read-project-info
      input:
        filePath: './${{ parameters.repoName }}/backstage.json'

    - id: fetch-catalog-resources
      name: Catalogando Recursos...
      action: fetch:template
      input:
        url: ./backstage
        targetPath: ./${{ parameters.repoName }}/backstage/
        values:
          projectName: ${{ steps['read-project-info'].output.projectName }}
          systemName: ${{ steps['read-project-info'].output.systemName }}
          systemType: ${{ steps['read-project-info'].output.systemType }}
          systemLang: ${{ steps['read-project-info'].output.systemLang }}
          systemOwner: ${{ steps['read-project-info'].output.systemOwner }}
          systemDomain: ${{ steps['read-project-info'].output.systemDomain }}
          repoUrlSsh: git@bitbucket.org:carrefour_ecommerce/${{ steps['read-project-info'].output.repoName }}.git
          componentName: ${{ steps['read-project-info'].output.componentName }}
          componentDesc: ${{ steps['read-project-info'].output.componentDesc }}
          componentGlobalManifestRepoUrl: https://bitbucket.org/carrefour_ecommerce/${{parameters.repoName}}/src/main/
          componentKubernetesId: ${{ steps['read-project-info'].output.componentKubernetesId }}
          componentKubernetesNamespace: ${{ steps['read-project-info'].output.componentKubernetesNamespace }}
          componentArgoCdURL: ${{ steps['read-project-info'].output.componentArgoCdURL }}
          componentDatadogHqSite: ${{ steps['read-project-info'].output.componentDatadogHqDashboardUrl }}
          componentDatadogHqDashboardUrl: ${{ steps['read-project-info'].output.componentDatadogHqDashboardUrl }}
          componentArgoCdAppName: ${{ steps['read-project-info'].output.componentArgoCdAppName }}
          componentCloudbuildProjectSlug: ${{ steps['read-project-info'].output.componentCloudbuildProjectSlug }}
          componentCloudBuildRepoName: ${{ steps['read-project-info'].output.componentCloudBuildRepoName }}
          componentBitbucketSourceLocation: ${{ steps['read-project-info'].output.componentBitbucketSourceLocation }}
          componentTechdosRef: ${{ steps['read-project-info'].output.componentTechdosRef }}
          componentType: ${{ steps['read-project-info'].output.componentType }}
          componentLifecycle: ${{ steps['read-project-info'].output.componentLifecycle }}
          resources: ${{ steps['read-project-info'].output.resources }}
          applications: ${{ steps['read-project-info'].output.applications }}

    - id: fetch-catalog-apps
      name: Catalogando Aplicações...
      action: fetch:template
      input:
        url: ./apps/catalog/
        targetPath: ./${{ parameters.repoName }}/apps/catalog/
        values:
          projectName: ${{ steps['read-project-info'].output.projectName }}
          systemName: ${{ steps['read-project-info'].output.systemName }}
          systemType: ${{ steps['read-project-info'].output.systemType }}
          systemLang: ${{ steps['read-project-info'].output.systemLang }}
          systemOwner: ${{ steps['read-project-info'].output.systemOwner }}
          systemDomain: ${{ steps['read-project-info'].output.systemDomain }}
          repoUrlSsh: git@bitbucket.org:carrefour_ecommerce/${{ steps['read-project-info'].output.repoName }}.git
          componentName: ${{ steps['read-project-info'].output.componentName }}
          componentDesc: ${{ steps['read-project-info'].output.componentDesc }}
          componentGlobalManifestRepoUrl: https://bitbucket.org/carrefour_ecommerce/${{parameters.repoName}}/src/main/
          componentKubernetesId: ${{ steps['read-project-info'].output.componentKubernetesId }}
          componentKubernetesNamespace: ${{ steps['read-project-info'].output.componentKubernetesNamespace }}
          componentArgoCdURL: ${{ steps['read-project-info'].output.componentArgoCdURL }}
          componentDatadogHqSite: ${{ steps['read-project-info'].output.componentDatadogHqDashboardUrl }}
          componentDatadogHqDashboardUrl: ${{ steps['read-project-info'].output.componentDatadogHqDashboardUrl }}
          componentArgoCdAppName: ${{ steps['read-project-info'].output.componentArgoCdAppName }}
          componentCloudbuildProjectSlug: ${{ steps['read-project-info'].output.componentCloudbuildProjectSlug }}
          componentCloudBuildRepoName: ${{ steps['read-project-info'].output.componentCloudBuildRepoName }}
          componentBitbucketSourceLocation: ${{ steps['read-project-info'].output.componentBitbucketSourceLocation }}
          componentTechdosRef: ${{ steps['read-project-info'].output.componentTechdosRef }}
          componentType: ${{ steps['read-project-info'].output.componentType }}
          componentLifecycle: ${{ steps['read-project-info'].output.componentLifecycle }}
          resources: ${{ steps['read-project-info'].output.resources }}
          applications: ${{ steps['read-project-info'].output.applications }}

    - id: git-status
      name: Git Status
      action: git
      input:
        command: status
        workingDirectory: ${{ parameters.repoName }}

    - id: git-add
      name: Git Add
      action: git
      input:
        command: add
        workingDirectory: ${{ parameters.repoName }}
        args: ['--all']

    - id: git-commit
      name: Git Commit Changes
      action: git
      input:
        command: commit
        workingDirectory: ${{ parameters.repoName }}
        args: ['-m','Backstage: Catalog Info']

    - id: git-push
      name: Git Push Changes
      action: git
      input:
        command: push
        workingDirectory: ${{ parameters.repoName }}
        args: ['origin','main']

    - id: show-main-catalog
      name: Arquivo main.yaml criado...
      action: carrefour:shell:execute
      input:
        command: >
          echo "https://bitbucket.org/carrefour_ecommerce/${{ parameters.repoName }}/src/main/backstage/main.yaml"

    # - id: catalog-register
    #   name: Registrando no Catalogo
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: https://bitbucket.org/carrefour_ecommerce/${{parameters.repoName}}/src/main/
    #     catalogInfoPath: ./backstage/main.yaml

    # - id: copy-temp-files
    #   name: Copy Temporary Files
    #   action: carrefour:shell:execute
    #   input:
    #     command: cp -r . /tmp/teste

    # - id: show-files
    #   name: List Dir Files
    #   action: carrefour:shell:execute
    #   input:
    #     command: >
    #       ls -lart ${{ parameters.repoName }}/apps/${{ parameters.appName }}